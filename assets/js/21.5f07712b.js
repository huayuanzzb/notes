(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{348:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("在使用容器化部署微服务时，自己开发的微服务需要打包成镜像并推送至镜像仓库中，以便k8s可以使用这些镜像构建容器。\n可以使用云服务商提供的私有仓库，但有些情况下出于网络、安全等方面的考虑，搭建自有仓库可能更加合适。")]),t._v(" "),s("p",[t._v("本文记录下使用harbor搭建私有仓库的过程。")]),t._v(" "),s("h3",{attrs:{id:"前提条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前提条件"}},[t._v("#")]),t._v(" 前提条件")]),t._v(" "),s("ul",[s("li",[t._v("一个可用域名，非必须，没有域名使用ip也可以。本文以 "),s("code",[t._v("registry.tst.cn")]),t._v(" 为例说明。")]),t._v(" "),s("li",[t._v("一个正常运行的k8s集群。")]),t._v(" "),s("li",[t._v("一个可用的storageClass, 如 "),s("code",[t._v("nfs-client")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("使用 "),s("a",{attrs:{href:"https://github.com/bitnami/charts/tree/main/bitnami/harbor",target:"_blank",rel:"noopener noreferrer"}},[t._v("bitnami/harbor"),s("OutboundLink")],1),t._v(" 搭建。")]),t._v(" "),s("p",[t._v("在 k8s master 节点上执行以下命令：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("helm "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" harbor-release "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("service.type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("NodePort "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("global.storageClass")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nfs-client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("trivy.enabled")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("false "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("service.nodePorts.https")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("31268")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("externalURL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://registry.tst.cn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("nginx.tls.commonName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("registry.tst.cn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("adminPassword")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("admin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     oci://registry-1.docker.io/bitnamicharts/harbor \n")])])]),s("p",[t._v("安装过程中，可能会遇到共享文件夹不存在，导致pvc创建不成功，此时使用 "),s("code",[t._v("kubectl describe")]),t._v(" 命令查看报错信息，将缺失的文件夹创建出来，并使用 "),s("code",[t._v("chmod")]),t._v(" 将其 mode 修改为 777.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("test-user@localhost ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-la")]),t._v(" /mnt/nfs-share/\ntotal "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\ndrwxr-xr-x  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" nfsnobody nfsnobody "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),t._v(" Nov  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 00:52 "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndrwxr-xr-x. "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" root      root        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" Oct "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(" 00:59 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\ndrwxrwxrwx  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" root      root        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("63")]),t._v(" Nov  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 00:38 default-data-harbor-release-postgresql-0-pvc-3c2f8635-c3ef-4bb5-b6cd-00ecb091cc2c\ndrwxrwxrwx  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root      root         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" Nov  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 00:52 default-harbor-release-jobservice-pvc-cb7257cd-3f3e-4efc-9819-a043ba09c29c\ndrwxrwxrwx  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root      root         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" Nov  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 00:47 default-harbor-release-jobservice-scandata-pvc-58a20ee1-8c8b-4a17-854d-bfdbf99cb30c\ndrwxrwxrwx  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" root      root         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" Nov  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 00:40 default-harbor-release-registry-pvc-01c3399a-d13d-4076-b0d7-b75204b0433f\ndrwxrwxrwx  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" root      root        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),t._v(" Nov  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 00:40 default-redis-data-harbor-release-redis-master-0-pvc-c20af3b5-60ff-49cb-918e-e4c57b1dcc0b\n\n")])])]),s("p",[t._v("执行成功后，可以根据该命令的输出获取访问地址和初始用户名密码。\n如果不启用https，登录会报错。")]),t._v(" "),s("h3",{attrs:{id:"配置免端口访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置免端口访问"}},[t._v("#")]),t._v(" 配置免端口访问")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("registry.tst.cn")]),t._v(" 指向的服务器上安装nginx，并配置TCP流量流量转发，即可实现免端口访问。")]),t._v(" "),s("ol",[s("li",[t._v("安装nginx stream模块："),s("code",[t._v("sudo yum install -y nginx-mod-stream")])]),t._v(" "),s("li",[t._v("在nginx.conf的http块之后添加:"),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v(" stream "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         proxy_pass localhost:31268"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])]),t._v(" "),s("li",[t._v("重新加载nginx: "),s("code",[t._v("sudo systemctl restart nginx")])])]),t._v(" "),s("h3",{attrs:{id:"pull镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull镜像"}},[t._v("#")]),t._v(" pull镜像")]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("containerd")]),t._v(" 为例配置。\n所有节点上都需要执行如下操作：")]),t._v(" "),s("ol",[s("li",[t._v("在 "),s("code",[t._v("containerd")]),t._v(" 的配置文件 "),s("code",[t._v("/etc/containerd/config.toml")]),t._v(" 中添加配置，如果节点上没有这个文件，导出当前配置并创建该文件："),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("containerd config default "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/containerd/config.toml\n")])])])]),t._v(" "),s("li",[t._v("修改配置文件，找到"),s("code",[t._v('[plugins."io.containerd.grpc.v1.cri".registry.configs]')]),t._v("，并在其下添加如下配置："),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("plugins."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.containerd.grpc.v1.cri"')]),t._v(".registry.configs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("plugins."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.containerd.grpc.v1.cri"')]),t._v(".registry.configs."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry.tst.cn"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("plugins."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.containerd.grpc.v1.cri"')]),t._v(".registry.configs."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry.tst.cn"')]),t._v(".tls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      insecure_skip_verify "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ca_file = "/etc/containerd/registry.tst.cn/ca.crt" # CA 证书')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#cert_file = "/etc/containerd/registry.tst.cn/registry.tst.cn.crt" # harbor 证书')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#key_file = "/etc/containerd/registry.tst.cn/registry.tst.cn.key" # harbor 私钥')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("plugins."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"io.containerd.grpc.v1.cri"')]),t._v(".registry.configs."),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry.tst.cn"')]),t._v(".auth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      username "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n      password "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin"')]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("重启: "),s("code",[t._v("systemctl restart containerd")])]),t._v(" "),s("li",[t._v("测试创建pod"),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pod\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("containers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tese"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n     "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" registry.tst.cn/library/hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("world"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1.0.0\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"push镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push镜像"}},[t._v("#")]),t._v(" push镜像")]),t._v(" "),s("p",[t._v("以 "),s("code",[t._v("docker")]),t._v(" 为例配置。")]),t._v(" "),s("p",[t._v("由于 "),s("code",[t._v("harbor")]),t._v(" 启用了 "),s("code",[t._v("https")]),t._v("，其证书是使用 "),s("code",[t._v("harbor-ca")]),t._v(" 签发的，该 CA 是不被信任的，因此需要先将其添加至 "),s("code",[t._v("docker")]),t._v(" 中：")]),t._v(" "),s("ol",[s("li",[t._v("下载 "),s("code",[t._v("harbor")]),t._v(" 的CA证书，进入harbor之后，依次点击: "),s("code",[t._v("projects -> {select a project} -> Repositories -> REGISTRY CERTIFICATE")])]),t._v(" "),s("li",[t._v("保存至 "),s("code",[t._v("docker")]),t._v(" 的证书目录，格式 "),s("code",[t._v("/etc/docker/certs.d/${domain_name}/ca.cert")]),t._v("，如本例中为："),s("code",[t._v("/etc/docker/certs.d/registry.tst.cn/ca.crt")])]),t._v(" "),s("li",[t._v("重启 "),s("code",[t._v("docker")]),t._v(" 服务："),s("code",[t._v("sudo systemctl restart docker")])])]),t._v(" "),s("p",[t._v("随后即可正常push镜像：")]),t._v(" "),s("ol",[s("li",[t._v("为镜像打标签："),s("code",[t._v("docker tag hello-world:1.0.0 registry.tst.cn/library/hello-world:1.0.0")])]),t._v(" "),s("li",[t._v("push镜像："),s("code",[t._v("docker push registry.tst.cn/library/hello-world:1.0.0")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);