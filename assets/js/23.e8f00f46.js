(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{350:function(e,l,a){"use strict";a.r(l);var t=a(7),v=Object(t.a)({},(function(){var e=this,l=e._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("p",[e._v("helm 命令学习")]),e._v(" "),l("h3",{attrs:{id:"helm-search"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-search"}},[e._v("#")]),e._v(" helm search")]),e._v(" "),l("p",[e._v("helm search 是一个强大的搜索命令，可以根据关键字从两种源中搜索，其采用字符串模糊匹配算法，只需输入部分名子即可搜索。")]),e._v(" "),l("table",[l("thead",[l("tr",[l("th",[e._v("命令")]),e._v(" "),l("th",[e._v("用途")]),e._v(" "),l("th",[e._v("备注")])])]),e._v(" "),l("tbody",[l("tr",[l("td",[e._v("helm search hub")]),e._v(" "),l("td",[e._v("从 Artifact Hub 中搜索")]),e._v(" "),l("td",[e._v("需联网使用")])]),e._v(" "),l("tr",[l("td",[e._v("helm repo hub")]),e._v(" "),l("td",[e._v("从本地repo(通过 helm repo add 命令添加)中搜索")]),e._v(" "),l("td",[e._v("无需联网使用")])])])]),e._v(" "),l("h3",{attrs:{id:"helm-install"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-install"}},[e._v("#")]),e._v(" helm install")]),e._v(" "),l("p",[e._v("helm install 用来将 Charts 安装到 kubernetes 集群中，每次安装都会生成一个 release，通过 helm list 命令可以查看当前所有的 release.")]),e._v(" "),l("p",[e._v("helm install 执行时会按顺序安装如下资源：")]),e._v(" "),l("ul",[l("li",[e._v("Namespace")]),e._v(" "),l("li",[e._v("NetworkPolicy")]),e._v(" "),l("li",[e._v("ResourceQuota")]),e._v(" "),l("li",[e._v("LimitRange")]),e._v(" "),l("li",[e._v("PodSecurityPolicy")]),e._v(" "),l("li",[e._v("PodDisruptionBudget")]),e._v(" "),l("li",[e._v("ServiceAccount")]),e._v(" "),l("li",[e._v("Secret")]),e._v(" "),l("li",[e._v("SecretList")]),e._v(" "),l("li",[e._v("ConfigMap")]),e._v(" "),l("li",[e._v("StorageClass")]),e._v(" "),l("li",[e._v("PersistentVolume")]),e._v(" "),l("li",[e._v("PersistentVolumeClaim")]),e._v(" "),l("li",[e._v("CustomResourceDefinition")]),e._v(" "),l("li",[e._v("ClusterRole")]),e._v(" "),l("li",[e._v("ClusterRoleList")]),e._v(" "),l("li",[e._v("ClusterRoleBinding")]),e._v(" "),l("li",[e._v("ClusterRoleBindingList")]),e._v(" "),l("li",[e._v("Role")]),e._v(" "),l("li",[e._v("RoleList")]),e._v(" "),l("li",[e._v("RoleBinding")]),e._v(" "),l("li",[e._v("RoleBindingList")]),e._v(" "),l("li",[e._v("Service")]),e._v(" "),l("li",[e._v("DaemonSet")]),e._v(" "),l("li",[e._v("Pod")]),e._v(" "),l("li",[e._v("ReplicationController")]),e._v(" "),l("li",[e._v("ReplicaSet")]),e._v(" "),l("li",[e._v("Deployment")]),e._v(" "),l("li",[e._v("HorizontalPodAutoscaler")]),e._v(" "),l("li",[e._v("StatefulSet")]),e._v(" "),l("li",[e._v("Job")]),e._v(" "),l("li",[e._v("CronJob")]),e._v(" "),l("li",[e._v("Ingress")]),e._v(" "),l("li",[e._v("APIService")])]),e._v(" "),l("p",[e._v("helm install 是一个异步过程，他不会等待所有资源都安装成功才退出，可以使用 "),l("code",[e._v("helm status ${release_name}")]),e._v(" 查看 release 的状态，或者重新读取配置信息。")]),e._v(" "),l("h3",{attrs:{id:"helm-upgrade"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-upgrade"}},[e._v("#")]),e._v(" helm upgrade")]),e._v(" "),l("p",[e._v("helm upgrade 可用来升级 Chart 版本，或者更新 release 配置。\nhelm 会尝试执行最小侵入式升级，即执行增量更新。")]),e._v(" "),l("h3",{attrs:{id:"helm-rollback"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-rollback"}},[e._v("#")]),e._v(" helm rollback")]),e._v(" "),l("p",[e._v("helm rollback 用于将 release 回滚到指定版本。")]),e._v(" "),l("h3",{attrs:{id:"helm-uninstall"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-uninstall"}},[e._v("#")]),e._v(" helm uninstall")]),e._v(" "),l("p",[e._v("helm uninstall 用于卸载一个 release，如果想要保留删除记录，可使用 "),l("code",[e._v("helm uninstall --keep-history")]),e._v("，随后可以使用 "),l("code",[e._v("helm list --uninstalled")]),e._v(" 查看已删除的 release.")]),e._v(" "),l("h3",{attrs:{id:"helm-create"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-create"}},[e._v("#")]),e._v(" helm create")]),e._v(" "),l("p",[e._v("helm create 用于生成一个chart，用于可以基于它快速创建一个自定义 chart。")]),e._v(" "),l("div",{staticClass:"language-bash extra-class"},[l("pre",{pre:!0,attrs:{class:"language-bash"}},[l("code",[e._v("$ helm create deis-workflow\nCreating deis-workflow\n")])])]),l("p",[e._v("编辑 chart 之后，可执行 "),l("code",[e._v("helm lint")]),e._v(" 验证语法是否正确。")]),e._v(" "),l("h3",{attrs:{id:"helm-package"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#helm-package"}},[e._v("#")]),e._v(" helm package")]),e._v(" "),l("p",[e._v("helm package 用于打包自定义 chart.")]),e._v(" "),l("div",{staticClass:"language-bash extra-class"},[l("pre",{pre:!0,attrs:{class:"language-bash"}},[l("code",[e._v("$ helm package deis-workflow\ndeis-workflow-0.1.0.tgz\n")])])]),l("p",[e._v("随后可以安装改 chart:")]),e._v(" "),l("div",{staticClass:"language-bash extra-class"},[l("pre",{pre:!0,attrs:{class:"language-bash"}},[l("code",[e._v("$ helm "),l("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" deis-workflow ./deis-workflow-0.1.0.tgz\n"),l("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])])])])}),[],!1,null,null,null);l.default=v.exports}}]);